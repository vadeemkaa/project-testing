env:
  repo: https://github.com/Luzifer/ots.git  #https://github.com/Aselya2507/project-testing.git
  app_version: 5.0.0
  region: us-central1
  project_id: ${{ secrets.PROJECT_ID }}
  app_name: ots
  tag_new_version: ${GITHUB_SHA}
  artifact_repository: team4


  # enable_sonar:    "true"
  # sonar_organization: "grecu"
  # sonar_projectKey: "project-ots"
  # sonar_login: ${{ secrets.SONAR_TOKEN }}

# This is a basic workflow to help you get started with Actions

name: CDelivery

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #   echo Add other actions to build,
      #    echo test, and deploy your project.
      # Runs a single command using the runners shell .
      - name: Clone a Repository
        run: |
          git clone ${{ env.repo }}
          
      # - name: Setup sonarqube
      #   if: ${{env.enable_sonar == 'true'}}
      #   uses: warchant/setup-sonar-scanner@v3
      # - name: Run sonarqube
      #   if: ${{env.enable_sonar == 'true'}}
      #   run: sonar-scanner
      #       -Dsonar.organization=${{ env.sonar_organization }}                              
      #       -Dsonar.projectKey=${{ env.sonar_projectKey }}                         
      #       -Dsonar.login=${{ env.sonar_login }}                                   
      #       -Dsonar.host.url=https://sonarcloud.io

      - name: Build the image
        working-directory: ${{ env.app_name }}
        run: 
          docker build -t ${{ env.region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.artifact_repository }}/${{ env.app_name }}:${{ env.tag_new_version }} .

      - name: Authenticate to Registry 
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'   

      - name: Authenticate to Repository
        run: |
          gcloud auth configure-docker    us-central1-docker.pkg.dev 

      - name: push
        run: docker push ${{ env.region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.artifact_repository }}/${{ env.app_name }}:${{ env.tag_new_version }}  